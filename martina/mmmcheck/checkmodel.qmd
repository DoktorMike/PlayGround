---
title: "Model Sanity Report"
author: "Martina Cabraja"
date: 2024-04-18
format:
  html:
    toc: true
    html-math-method: katex
    code-fold: true
    css: styles.css
    embed-resources: true
---


## Setup

```{r}
#| warning: false
#| message: false

library(readr)
library(ggplot2)
library(dplyr)
library(car)
library(moments)
library(lubridate)
modeldf <- readr::read_csv("./model-fit.csv") %>% 
    dplyr::mutate(yearweek = paste(year, stringr::str_pad(week, width=2, pad="0"), sep="-")) %>%
    dplyr::mutate(Date = lubridate::parse_date_time(paste0(yearweek, "-1"), "Y-W-w"))
res <- modeldf[["Residual"]]
bic <- function(x, n, k) n*log(var(x)) + k*log(n)

```


## Overall model sanity

```{r}
#| label: tbl-statistical-test
#| warning: false
#| message: false
#| tbl-cap: The statistical test and their meaning as well as if the model passed or not.

resdf <- tibble(
    Test = c("Durbin-Watson", "Shapiro-Wilks", "PACF", "Box-Pierce", "Correlation test", "Skewness", "Kurtosis", "Kolmogorov-Smirnov", "Kolmogorov-Smirnov"),
    Purpose = c("Autocorrelation", "Normality", "Autocorrelation", "Autocorrelation", "Heteroskedasticity", "Normality", "Normality", "Residual Theoretical Similarity", "Predictive Theoretical Similarity"),
    # Value = NA,
    Pass = c(
        all(abs(car::dwt(res, max.lag = 20) - 2) < 1),
        shapiro.test(res)$p.value > 0.05,
        all(abs(pacf(res, plot = FALSE)$acf[, , 1]) < 0.13),
        all(sapply(1:20, FUN = \(x) Box.test(res, lag = x)$p.value) > 0.05),
        cor.test(modeldf$Actual, modeldf$Residual)$p.value > 0.05,
        abs(moments::skewness(res)) < 0.5,
        abs(moments::kurtosis(res)-3) < 0.5,
        ks.test(res, rnorm(length(res), 0, sd(res)))$p.value > 0.05,
        ks.test(modeldf$Actual, modeldf$Model)$p.value > 0.05
    )
)
resdf %>% knitr::kable()

```

## Visual Inspections

### Autocorrelation

```{r}
#| label: fig-pacf
#| fig-cap: "Partial Autocorrelation"
#| warning: false
pacf(res)
```

### Normality

```{r}
#| label: fig-normality
#| fig-cap: "Normally distributed residuals"
#| warning: false
modeldf %>% ggplot(aes(Residual)) +
    ggplot2::geom_histogram(aes(y = after_stat(density)), fill = nord::nord("frost")[4]) +
    ## ggplot2::geom_density() +
    stat_function(
        fun = dnorm,
        args = list(mean = mean(0), sd = sd(res)),
        lwd = 2,
        col = nord::nord("frost")[1]
    ) +
    ggplot2::theme_minimal(base_size=16) +
    ggplot2::scale_x_continuous(labels = scales::comma) + ylab("Density")
```

### Heteroskedasticity

Heteroskedasticity says something about how the variance of the residuals vary
with the scale of the target variable. Why does that matter? Well it matters
because you don't want to make bigger errors just because you are predicting a
larger value.

```{r}
#| label: fig-heteroskedasticity
#| fig-cap: "Heteroskedasticity is present."
#| warning: false

modeldf %>% ggplot2::ggplot(aes(x = Residual, y = Actual)) + 
    geom_point() + 
    theme_minimal(base_size=16) +
    ggplot2::scale_x_continuous(labels = scales::comma)  +
    ggplot2::scale_y_continuous(labels = scales::comma) +
    geom_smooth(method=lm)

```

Let's look at a rolling window of 100 residuals and see how the variance
changes over time. In @fig-sdplotoverresiduals we can see that it's not
constant.

```{r}
#| label: fig-sdplotoverresiduals
#| fig-cap: "Variance of residuals is not constant over time."
#| warning: false

w <- 100
f <- sd 
tmpdf <- tibble(SDs=zoo::rollapply(res, width = w, FUN=f), Date=tail(modeldf$Date, length(SDs)))
tmpdf %>% ggplot(aes(x=Date, y=SDs)) + geom_point() + 
    theme_minimal(base_size=16) + 
    geom_hline(yintercept = sd(res)) +
    geom_smooth(level=0.999) +
    scale_y_continuous(labels=scales::comma) + ylab("Residual Standard Deviation") + xlab("")

```

### Normality with QQ plots

```{r}
#| label: fig-qqplot
#| fig-cap: "Normality looks fine in this Quantile-Quantile plot."
#| warning: false

modeldf %>% ggplot(aes(sample = Residual)) + stat_qq() + stat_qq_line() + 
    theme_minimal(base_size=16) +
    ggplot2::scale_x_continuous(labels = scales::comma)  +
    ggplot2::scale_y_continuous(labels = scales::comma) +
    ylab("Sampled Quantiles") + xlab("Theoretical Quantiles")
```


